plugins {
    id "groovy"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/" }
}

group = "org.luna.quickapp"
version = "1.0"
description = "Quick App Template"

dependencies {
    implementation platform("org.noear:solon-parent:3.0.3")

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
    implementation group: 'com.baomidou', name: 'mybatis-plus-solon-plugin', version: '3.5.9'

    implementation("mysql:mysql-connector-java:8.0.32")
    implementation("com.alibaba:fastjson:1.2.5")

    implementation("org.noear:solon-web")
    implementation("org.noear:solon-view-freemarker")
    implementation("org.noear:solon-logging-logback")
    implementation("org.noear:mybatis-plus-solon-plugin")
    implementation("org.codehaus.groovy:groovy:3.0.14")

    compileOnly("org.projectlombok:lombok")

    testImplementation("org.noear:solon-test")
}


compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-parameters"
}
compileGroovy{
    groovyOptions.parameters = true
}

jar {
    manifest {
        attributes "Main-Class": "org.luna.quickapp.App"
    }
    
    dependsOn(configurations.runtimeClasspath)

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(configurations.runtimeClasspath.collect {
        if (it.isDirectory()) it else zipTree(it)
    }){
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
    
    def sourcesMain = sourceSets.main
    sourcesMain.allSource.forEach { println("add from sources: ${it.name}") }
    from(sourcesMain.output)
}